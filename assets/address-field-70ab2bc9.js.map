{"version":3,"file":"address-field-70ab2bc9.js","sources":["../../src/components/02-components/address-field/address-field.tsx"],"sourcesContent":["import {\n  Box,\n  type BoxProps,\n  Collapse,\n  FormControl,\n  InputLabel,\n  Select,\n  SelectChangeEvent,\n  TextField,\n  Typography,\n  useTheme,\n} from '@mui/material';\nimport { useEffect, useState } from 'react';\n\nexport type AddressType = {\n  country: string;\n  streetAddress1: string;\n  streetAddress2?: string;\n  city: string;\n  state: string;\n  zipCode: string;\n};\n\ninterface AddressFieldProps extends BoxProps {\n  id?: string;\n  address?: AddressType;\n}\n\nconst usStates = [\n  {\n    id: 'AL',\n    label: 'Alabama',\n  },\n  {\n    id: 'AK',\n    label: 'Alaska',\n  },\n  {\n    id: 'AS',\n    label: 'American Samoa',\n  },\n  {\n    id: 'AZ',\n    label: 'Arizona',\n  },\n  {\n    id: 'AR',\n    label: 'Arkansas',\n  },\n  {\n    id: 'AA',\n    label: 'Armed Forces (AA)',\n  },\n  {\n    id: 'AE',\n    label: 'Armed Forces (AE)',\n  },\n  {\n    id: 'AP',\n    label: 'Armed Forces (AP)',\n  },\n  {\n    id: 'CA',\n    label: 'California',\n  },\n  {\n    id: 'CO',\n    label: 'Colorado',\n  },\n  {\n    id: 'CT',\n    label: 'Connecticut',\n  },\n  {\n    id: 'DE',\n    label: 'Delaware',\n  },\n  {\n    id: 'DC',\n    label: 'District of Columbia',\n  },\n  {\n    id: 'FL',\n    label: 'Florida',\n  },\n  {\n    id: 'GA',\n    label: 'Georgia',\n  },\n  {\n    id: 'GU',\n    label: 'Guam',\n  },\n  {\n    id: 'HI',\n    label: 'Hawaii',\n  },\n  {\n    id: 'ID',\n    label: 'Idaho',\n  },\n  {\n    id: 'IL',\n    label: 'Illinois',\n  },\n  {\n    id: 'IN',\n    label: 'Indiana',\n  },\n  {\n    id: 'IA',\n    label: 'Iowa',\n  },\n  {\n    id: 'KS',\n    label: 'Kansas',\n  },\n  {\n    id: 'KY',\n    label: 'Kentucky',\n  },\n  {\n    id: 'LA',\n    label: 'Louisiana',\n  },\n  {\n    id: 'ME',\n    label: 'Maine',\n  },\n  {\n    id: 'MH',\n    label: 'Marshall Islands',\n  },\n  {\n    id: 'MD',\n    label: 'Maryland',\n  },\n  {\n    id: 'MA',\n    label: 'Massachusetts',\n  },\n  {\n    id: 'MI',\n    label: 'Michigan',\n  },\n  {\n    id: 'FM',\n    label: 'Micronesia',\n  },\n  {\n    id: 'MN',\n    label: 'Minnesota',\n  },\n  {\n    id: 'MS',\n    label: 'Mississippi',\n  },\n  {\n    id: 'MO',\n    label: 'Missouri',\n  },\n  {\n    id: 'MT',\n    label: 'Montana',\n  },\n  {\n    id: 'NE',\n    label: 'Nebraska',\n  },\n  {\n    id: 'NV',\n    label: 'Nevada',\n  },\n  {\n    id: 'NH',\n    label: 'New Hampshire',\n  },\n  {\n    id: 'NJ',\n    label: 'New Jersey',\n  },\n  {\n    id: 'NM',\n    label: 'New Mexico',\n  },\n  {\n    id: 'NY',\n    label: 'New York',\n  },\n  {\n    id: 'NC',\n    label: 'North Carolina',\n  },\n  {\n    id: 'ND',\n    label: 'North Dakota',\n  },\n  {\n    id: 'MP',\n    label: 'Northern Mariana Islands',\n  },\n  {\n    id: 'OH',\n    label: 'Ohio',\n  },\n  {\n    id: 'OK',\n    label: 'Oklahoma',\n  },\n  {\n    id: 'OR',\n    label: 'Oregon',\n  },\n  {\n    id: 'PW',\n    label: 'Palau',\n  },\n  {\n    id: 'PA',\n    label: 'Pennsylvania',\n  },\n  {\n    id: 'PR',\n    label: 'Puerto Rico',\n  },\n  {\n    id: 'RI',\n    label: 'Rhode Island',\n  },\n  {\n    id: 'SC',\n    label: 'South Carolina',\n  },\n  {\n    id: 'SD',\n    label: 'South Dakota',\n  },\n  {\n    id: 'TN',\n    label: 'Tennessee',\n  },\n  {\n    id: 'TX',\n    label: 'Texas',\n  },\n  {\n    id: 'UT',\n    label: 'Utah',\n  },\n  {\n    id: 'VT',\n    label: 'Vermont',\n  },\n  {\n    id: 'VI',\n    label: 'Virgin Islands',\n  },\n  {\n    id: 'VA',\n    label: 'Virginia',\n  },\n  {\n    id: 'WA',\n    label: 'Washington',\n  },\n  {\n    id: 'WV',\n    label: 'West Virginia',\n  },\n  {\n    id: 'WI',\n    label: 'Wisconsin',\n  },\n  {\n    id: 'WY',\n    label: 'Wyoming',\n  },\n];\n\nexport default function AddressField({\n  id,\n  address,\n  ...props\n}: AddressFieldProps) {\n  const [expanded, setExpanded] = useState(false);\n  const theme = useTheme();\n\n  useEffect(() => {\n    setExpanded(typeof address !== 'undefined' && address.country !== 'none');\n  }, [address, setExpanded]);\n\n  function countryChangeHandler(event: SelectChangeEvent) {\n    setExpanded(event.target.value !== 'none');\n  }\n\n  // Styles.\n  const containerStyles = {\n    p: theme.spacing(3),\n    border: `1px solid ${theme.palette.secondary.main}`,\n    borderRadius: theme.spacing(1),\n  };\n\n  const fieldBaseStyles = {\n    mb: theme.spacing(3),\n  };\n\n  const twoColStyles = {\n    [theme.breakpoints.up('sm')]: {\n      display: 'flex',\n      gap: theme.spacing(3),\n    },\n  };\n\n  const idPrefix = typeof id !== 'undefined' ? `${id}-` : '';\n\n  return (\n    <Box sx={containerStyles} {...props}>\n      <Typography variant=\"h3\" mb={4}>\n        Address\n      </Typography>\n      <FormControl fullWidth>\n        <InputLabel id={`${idPrefix}address-country-label`}>Country</InputLabel>\n        <Select\n          labelId={`${idPrefix}address-country-label`}\n          id={`${idPrefix}address-country`}\n          label=\"Country\"\n          native={true}\n          name=\"address_country\"\n          defaultValue={address?.country ?? 'none'}\n          onChange={countryChangeHandler}\n        >\n          <option value=\"none\">Select country...</option>\n          <option value=\"US\">United States</option>\n        </Select>\n      </FormControl>\n      <Collapse in={expanded}>\n        <TextField\n          required={expanded}\n          fullWidth\n          id={`${idPrefix}street-address1`}\n          variant=\"outlined\"\n          name=\"address_street_address1\"\n          label=\"Street address\"\n          defaultValue={address?.streetAddress1}\n          sx={{ ...fieldBaseStyles, mt: theme.spacing(3) }}\n        />\n        <TextField\n          fullWidth\n          id={`${idPrefix}street-address2`}\n          variant=\"outlined\"\n          name=\"address_street_address2\"\n          label=\"Street address 2\"\n          defaultValue={address?.streetAddress2}\n          sx={fieldBaseStyles}\n        />\n        <Box sx={twoColStyles}>\n          <TextField\n            required={expanded}\n            fullWidth\n            id={`${idPrefix}city`}\n            variant=\"outlined\"\n            name=\"address_city\"\n            label=\"City\"\n            defaultValue={address?.city}\n            sx={fieldBaseStyles}\n          />\n          <FormControl fullWidth required sx={fieldBaseStyles}>\n            <InputLabel id={`${idPrefix}address-state-label`}>State</InputLabel>\n            <Select\n              required={expanded}\n              labelId=\"address-state-label\"\n              id={`${idPrefix}address-state`}\n              label=\"State\"\n              native={true}\n              name=\"address_state\"\n              defaultValue={address?.state ?? 'none'}\n            >\n              <option value=\"none\">Select stateâ€¦</option>\n              {usStates.map((state) => (\n                <option key={state.id} value={state.id}>\n                  {state.label}\n                </option>\n              ))}\n            </Select>\n          </FormControl>\n        </Box>\n        <TextField\n          required={expanded}\n          id={`${idPrefix}zipcode`}\n          variant=\"outlined\"\n          name=\"address_zipcode\"\n          label=\"Zip code\"\n          defaultValue={address?.zipCode}\n        />\n      </Collapse>\n    </Box>\n  );\n}\n"],"names":["usStates","AddressField","id","address","props","expanded","setExpanded","useState","theme","useTheme","useEffect","countryChangeHandler","event","containerStyles","fieldBaseStyles","twoColStyles","idPrefix","jsxs","Box","jsx","Typography","FormControl","InputLabel","Select","Collapse","TextField","state"],"mappings":"kWA4BA,MAAAA,EAAA,CAAiB,CACf,GAAA,KACM,MAAA,SACG,EACT,CACA,GAAA,KACM,MAAA,QACG,EACT,CACA,GAAA,KACM,MAAA,gBACG,EACT,CACA,GAAA,KACM,MAAA,SACG,EACT,CACA,GAAA,KACM,MAAA,UACG,EACT,CACA,GAAA,KACM,MAAA,mBACG,EACT,CACA,GAAA,KACM,MAAA,mBACG,EACT,CACA,GAAA,KACM,MAAA,mBACG,EACT,CACA,GAAA,KACM,MAAA,YACG,EACT,CACA,GAAA,KACM,MAAA,UACG,EACT,CACA,GAAA,KACM,MAAA,aACG,EACT,CACA,GAAA,KACM,MAAA,UACG,EACT,CACA,GAAA,KACM,MAAA,sBACG,EACT,CACA,GAAA,KACM,MAAA,SACG,EACT,CACA,GAAA,KACM,MAAA,SACG,EACT,CACA,GAAA,KACM,MAAA,MACG,EACT,CACA,GAAA,KACM,MAAA,QACG,EACT,CACA,GAAA,KACM,MAAA,OACG,EACT,CACA,GAAA,KACM,MAAA,UACG,EACT,CACA,GAAA,KACM,MAAA,SACG,EACT,CACA,GAAA,KACM,MAAA,MACG,EACT,CACA,GAAA,KACM,MAAA,QACG,EACT,CACA,GAAA,KACM,MAAA,UACG,EACT,CACA,GAAA,KACM,MAAA,WACG,EACT,CACA,GAAA,KACM,MAAA,OACG,EACT,CACA,GAAA,KACM,MAAA,kBACG,EACT,CACA,GAAA,KACM,MAAA,UACG,EACT,CACA,GAAA,KACM,MAAA,eACG,EACT,CACA,GAAA,KACM,MAAA,UACG,EACT,CACA,GAAA,KACM,MAAA,YACG,EACT,CACA,GAAA,KACM,MAAA,WACG,EACT,CACA,GAAA,KACM,MAAA,aACG,EACT,CACA,GAAA,KACM,MAAA,UACG,EACT,CACA,GAAA,KACM,MAAA,SACG,EACT,CACA,GAAA,KACM,MAAA,UACG,EACT,CACA,GAAA,KACM,MAAA,QACG,EACT,CACA,GAAA,KACM,MAAA,eACG,EACT,CACA,GAAA,KACM,MAAA,YACG,EACT,CACA,GAAA,KACM,MAAA,YACG,EACT,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"}