{"version":3,"file":"campus-list.stories-316a6284.js","sources":["../../src/components/02-components/campus-list/campus-list.tsx"],"sourcesContent":["import {\n  Box,\n  Button,\n  FormControl,\n  InputLabel,\n  Paper,\n  Select,\n  TextField,\n  Typography,\n  useTheme,\n} from '@mui/material';\nimport { ElementType, ReactNode } from 'react';\nimport Pager from '../../01-elements/pager/pager';\n\ntype CampusListProps = {\n  children: ReactNode;\n  url: string;\n  FormElement?: ElementType;\n  totalItems: number;\n  itemsPerPage: number;\n  currentPage: number;\n  statusFilterValues: {\n    id: string;\n    label: string;\n  }[];\n  currentFilters: {\n    agreementStatus: string | null;\n    campusName: string | null;\n  };\n};\n\nexport default function CampusList({\n  children,\n  url,\n  FormElement,\n  totalItems,\n  itemsPerPage,\n  currentPage,\n  statusFilterValues,\n  currentFilters,\n}: CampusListProps) {\n  const theme = useTheme();\n\n  const firstItem = itemsPerPage * (currentPage - 1) + 1;\n  const lastItem =\n    totalItems > itemsPerPage ? firstItem + itemsPerPage - 1 : totalItems;\n\n  // Styles.\n  const containerStyles = {\n    mt: theme.spacing(3),\n    p: theme.spacing(3),\n    pb: theme.spacing(4),\n  };\n\n  const listStyles = {\n    '& article + article': {\n      mt: theme.spacing(3),\n    },\n  };\n\n  const formItemStyles = {\n    mb: theme.spacing(2),\n    display: 'flex',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex',\n      mb: 0,\n      mr: theme.spacing(2),\n    },\n  };\n\n  const formInner = (\n    <>\n      <FormControl size=\"small\" sx={formItemStyles}>\n        <InputLabel id=\"status-select-label\">Status</InputLabel>\n        <Select\n          id=\"status-select\"\n          label=\"Status\"\n          native={true}\n          name=\"agreementStatus\"\n          defaultValue={currentFilters.agreementStatus}\n        >\n          {statusFilterValues.map((item) => (\n            <option key={item.id} value={item.id}>\n              {item.label}\n            </option>\n          ))}\n        </Select>\n      </FormControl>\n      <TextField\n        label=\"Name\"\n        id=\"name\"\n        size=\"small\"\n        name=\"campusName\"\n        sx={formItemStyles}\n        defaultValue={currentFilters.campusName}\n      />\n      <Button variant=\"contained\" type=\"submit\">\n        Apply Filters\n      </Button>\n    </>\n  );\n\n  const form = FormElement ? (\n    <FormElement>{formInner}</FormElement>\n  ) : (\n    <form>{formInner}</form>\n  );\n\n  return (\n    <div>\n      <Typography variant=\"h1\">Campuses</Typography>\n      <Paper elevation={0} sx={containerStyles}>\n        <Typography>\n          This page includes a list of campuses and the programs that are\n          currently using CalState S4. You can use the filter function to see a\n          list of campuses with which your organization has an existing\n          partnership. For campuses your organization is not currently partnered\n          with, use the Initiate Partnership button to begin the process.\n        </Typography>\n        <Box sx={{ pt: theme.spacing(2), pb: theme.spacing(6) }}>{form}</Box>\n        {totalItems ? (\n          <Typography sx={{ mb: theme.spacing(2) }}>\n            Showing {firstItem} to {lastItem} of {totalItems} results\n          </Typography>\n        ) : null}\n        <Box sx={listStyles}>{children}</Box>\n        {totalItems > itemsPerPage && (\n          <Pager\n            baseUrl={url}\n            count={Math.ceil(totalItems / itemsPerPage)}\n            page={currentPage}\n            sx={{\n              display: 'flex',\n              justifyContent: 'center',\n              pt: theme.spacing(3),\n            }}\n          />\n        )}\n      </Paper>\n    </div>\n  );\n}\n"],"names":["CampusList","children","url","FormElement","totalItems","itemsPerPage","currentPage","statusFilterValues","currentFilters","theme","useTheme","firstItem","lastItem","containerStyles","listStyles","formItemStyles","formInner","jsxs","Fragment","FormControl","jsx","InputLabel","Select","item","TextField","Button","form","Typography","Paper","Box","Pager"],"mappings":"6uDA+BA,SAAAA,EAAA,CAAmC,SAAAC,EACjC,IAAAC,EACA,YAAAC,EACA,WAAAC,EACA,aAAAC,EACA,YAAAC,EACA,mBAAAC,EACA,eAAAC,CAEF,EAAA,CACE,MAAAC,EAAAC,IAEAC,EAAAN,GAAAC,EAAA,GAAA,EACAM,EAAAR,EAAAC,EAAAM,EAAAN,EAAA,EAAAD,EAIAS,EAAA,CAAwB,GAAAJ,EAAA,QAAA,CAAA,EACH,EAAAA,EAAA,QAAA,CAAA,EACD,GAAAA,EAAA,QAAA,CAAA,CACC,EAGrBK,EAAA,CAAmB,sBAAA,CACM,GAAAL,EAAA,QAAA,CAAA,CACF,CACrB,EAGFM,EAAA,CAAuB,GAAAN,EAAA,QAAA,CAAA,EACF,QAAA,OACV,CAAAA,EAAA,YAAA,GAAA,IAAA,CAAA,EAAA,CACqB,QAAA,cACnB,GAAA,EACL,GAAAA,EAAA,QAAA,CAAA,CACe,CACrB,EAGFO,EAAAC,EAAAA,KAAAC,EAAA,SAAA,CAAA,SAAA,CAEID,EAAA,KAAAE,EAAA,CAAA,KAAA,QAAA,GAAAJ,EAAA,SAAA,CACEK,EAAA,IAAAC,EAAA,CAAA,GAAA,sBAAA,SAAA,SAAA,EAA2CD,EAAA,IAC3CE,EAAC,CAAA,GAAA,gBACI,MAAA,SACG,OAAA,GACE,KAAA,kBACH,aAAAd,EAAA,gBACwB,SAAAD,EAAA,IAAAgB,GAAAH,EAAAA,IAAA,SAAA,CAAA,MAAAG,EAAA,GAAA,SAAAA,EAAA,KAAA,EAAAA,EAAA,EAAA,CAAA,CAM5B,CAAA,CACH,EAAA,EACFH,EAAA,IACAI,EAAC,CAAA,MAAA,OACO,GAAA,OACH,KAAA,QACE,KAAA,aACA,GAAAT,EACD,aAAAP,EAAA,UACyB,CAAA,EAC/BY,MAAAK,EAAA,CAAA,QAAA,YAAA,KAAA,SAAA,SAAA,gBAAA,CAGA,CAAA,CAAA,EAIJC,EAAAvB,EAAAiB,EAAA,IAAAjB,EAAA,CAAA,SAAAa,EAAA,EAAAI,EAAA,IAAA,OAAA,CAAA,SAAAJ,CAAA,CAAA,EAMA,OAAAC,EAAA,KAAA,MAAA,CAAA,SAAA,CAEIG,EAAA,IAAAO,EAAA,CAAA,QAAA,KAAA,SAAA,WAAA,EAAiCV,EAAA,KAAAW,EAAA,CAAA,UAAA,EAAA,GAAAf,EAAA,SAAA,CAE/BO,EAAAA,IAAAO,EAAA,CAAA,SAAA,4UAAA,CAAA,EAMAP,EAAA,IAAAS,EAAA,CAAA,GAAA,CAAA,GAAApB,EAAA,QAAA,CAAA,EAAA,GAAAA,EAAA,QAAA,CAAA,CAAA,EAAA,SAAAiB,EAAA,EAC+DtB,EAAAa,EAAA,KAAAU,EAAA,CAAA,GAAA,CAAA,GAAAlB,EAAA,QAAA,CAAA,CAAA,EAAA,SAAA,CAEnB,WAAAE,EAC/B,OAAUC,EAAK,OAASR,EAAK,UAAW,CAAA,CAAA,EAAA,KAEjDgB,EAAAA,IAAAS,EAAA,CAAA,GAAAf,EAAA,SAAAb,CAAA,CAAA,EAC2BG,EAAAC,GAAAe,EAAA,IAE7BU,EAAC,CAAA,QAAA5B,EACU,MAAA,KAAA,KAAAE,EAAAC,CAAA,EACiC,KAAAC,EACpC,GAAA,CACF,QAAA,OACO,eAAA,SACO,GAAAG,EAAA,QAAA,CAAA,CACG,CACrB,CAAA,CACF,EAAA,CAEJ,CAAA,CAAA,CAGN;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}