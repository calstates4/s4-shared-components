{"version":3,"file":"card-experience.stories-2b9d2085.js","sources":["../../src/components/02-components/card-experience/card-experience.tsx"],"sourcesContent":["import {\n  Box,\n  Button,\n  Paper,\n  Typography,\n  useTheme,\n  type SxProps,\n} from '@mui/material';\nimport { experienceStatusInfo } from '../../../lib/utils';\nimport CardExperienceHours from '../card-experience-hours/card-experience-hours';\n\nexport type CardExperienceProps = {\n  id: string;\n  heading: string;\n  state: string;\n  description?: string;\n  program: string;\n  dateStart: string;\n  dateEnd: string;\n  location: string;\n  cta: string;\n  hours: number;\n  hoursCtaUrl: string;\n  cardCount: number;\n};\n\nexport default function CardExperience({\n  heading,\n  state,\n  description,\n  program,\n  dateStart,\n  dateEnd,\n  location,\n  cta,\n  hours,\n  hoursCtaUrl,\n  cardCount,\n}: CardExperienceProps) {\n  const theme = useTheme();\n\n  // Variables according to the variant of the number of items\n  const position = cardCount >= 2 ? 'column' : 'row';\n  const contentPadding = cardCount >= 2 ? theme.spacing(4) : theme.spacing(5);\n  const itemsAlignment = cardCount >= 2 ? 'flex-start' : 'center';\n  const stateMarginY = cardCount >= 2 ? theme.spacing(2) : '0';\n  const stateMarginX = cardCount >= 2 ? '0' : theme.spacing(2);\n  const bodyMarginLeft = cardCount >= 2 ? '0' : theme.spacing(5);\n  const bodyMarginBottom = cardCount >= 2 ? theme.spacing(3) : '0';\n  const cardNumberVariation = cardCount >= 2 ? 'row' : 'column';\n  const bodyWrapper = cardCount >= 2 ? '0' : '1 0 75%';\n  const cardHourWrapper = cardCount >= 2 ? '0' : '1 0 25%';\n  const containerPosition = cardCount >= 2 ? 'row' : 'column';\n\n  const states = experienceStatusInfo(theme);\n\n  // Styles.\n  const containerStyles: SxProps = {\n    p: theme.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    minWidth: '100%',\n    [theme.breakpoints.up('sm')]: {\n      minWidth: '450px',\n    },\n    [theme.breakpoints.up('md')]: {\n      p: contentPadding,\n      flexDirection: containerPosition,\n      flex: '1 1 100%',\n    },\n    [theme.breakpoints.up('lg')]: {\n      minWidth: '500px',\n    },\n  };\n\n  const contentStyles = {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexDirection: 'column',\n    flex: 'auto',\n    [theme.breakpoints.up('md')]: {\n      flexDirection: position,\n    },\n  };\n\n  const bodyWrapperStyles = {\n    flex: bodyWrapper,\n  };\n\n  const headingWrapperStyles = {\n    display: 'flex',\n    alignItems: 'flex-start',\n    marginBottom: theme.spacing(1),\n    flexDirection: 'column',\n    [theme.breakpoints.up('md')]: {\n      flexDirection: position,\n      alignItems: itemsAlignment,\n    },\n  };\n\n  const headingStyles = {\n    fontWeight: '700',\n  };\n\n  const stateStyles = {\n    marginTop: theme.spacing(2),\n    backgroundColor: states[state].color,\n    px: theme.spacing(1),\n    borderRadius: '4px',\n    [theme.breakpoints.up('md')]: {\n      marginLeft: stateMarginX,\n      my: stateMarginY,\n    },\n  };\n\n  const descriptionContainerStyles = {\n    flexBasis: '60%',\n    marginRight: bodyMarginLeft,\n  };\n\n  const programInfoStyles = {\n    flexBasis: '40%',\n  };\n\n  const descriptionStyles = {\n    display: 'flex',\n    flexDirection: 'column',\n  };\n\n  const buttonStyles = {\n    backgroundColor: 'white',\n    border: `2px solid ${theme.palette.primary.main}`,\n    color: 'primary.main',\n    fontWeight: '700',\n    '&:focus, &:hover, &:active': {\n      backgroundColor: 'primary.dark',\n      color: 'white',\n    },\n  };\n\n  const infoStyles = {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: theme.spacing(4),\n    [theme.breakpoints.up('md')]: {\n      flexDirection: position,\n      marginBottom: bodyMarginBottom,\n    },\n  };\n\n  const cardHoursStyles = {\n    flex: cardHourWrapper,\n  };\n\n  // Render funtions.\n  const renderedHeading = heading && (\n    <Typography sx={headingStyles} variant=\"h2\">\n      {heading}\n    </Typography>\n  );\n\n  const renderedState = state && (\n    <Typography sx={stateStyles} variant=\"body2\">\n      {states[state].label}\n    </Typography>\n  );\n\n  const renderedDescription = description && (\n    <Box sx={descriptionStyles}>\n      <strong>Experience Details:</strong>\n      <div dangerouslySetInnerHTML={{ __html: description }} />\n    </Box>\n  );\n\n  const renderedProgram = program && (\n    <Box>\n      <strong>Program: </strong>\n      {program}\n    </Box>\n  );\n\n  const renderedLocation = location && (\n    <Box>\n      <strong>Location: </strong>\n      {location}\n    </Box>\n  );\n\n  const renderedDate = dateStart && dateEnd && (\n    <Box>\n      <strong>Date: </strong>\n      {dateStart} - {dateEnd}\n    </Box>\n  );\n\n  return (\n    <Paper sx={containerStyles} component=\"article\">\n      <Box sx={contentStyles}>\n        <Box sx={bodyWrapperStyles}>\n          <Box sx={headingWrapperStyles}>\n            {renderedHeading}\n            {renderedState}\n          </Box>\n          <Box sx={infoStyles}>\n            <Box sx={descriptionContainerStyles}>{renderedDescription}</Box>\n            <Box sx={programInfoStyles}>\n              {renderedProgram}\n              {renderedLocation}\n              {renderedDate}\n            </Box>\n          </Box>\n        </Box>\n        <Box sx={cardHoursStyles}>\n          <CardExperienceHours\n            hours={hours}\n            cta={hoursCtaUrl}\n            position={cardNumberVariation}\n          />\n          {cardCount >= 2 && (\n            <Button sx={{ ...buttonStyles, width: '100%' }} href={cta}>\n              More Details\n            </Button>\n          )}\n        </Box>\n      </Box>\n      {cardCount === 1 && (\n        <Button sx={{ ...buttonStyles, alignSelf: 'flex-start' }} href={cta}>\n          More Details\n        </Button>\n      )}\n    </Paper>\n  );\n}\n"],"names":["CardExperience","heading","state","description","program","dateStart","dateEnd","location","cta","hours","hoursCtaUrl","cardCount","theme","useTheme","position","contentPadding","itemsAlignment","stateMarginY","stateMarginX","bodyMarginLeft","bodyMarginBottom","cardNumberVariation","bodyWrapper","cardHourWrapper","containerPosition","states","experienceStatusInfo","containerStyles","contentStyles","bodyWrapperStyles","headingWrapperStyles","headingStyles","stateStyles","descriptionContainerStyles","programInfoStyles","descriptionStyles","buttonStyles","infoStyles","cardHoursStyles","renderedHeading","jsx","Typography","renderedState","renderedDescription","jsxs","Box","renderedProgram","renderedLocation","renderedDate","Paper","CardExperienceHours","Button"],"mappings":"iWA0BA,SAAAA,EAAA,CAAuC,QAAAC,EACrC,MAAAC,EACA,YAAAC,EACA,QAAAC,EACA,UAAAC,EACA,QAAAC,EACA,SAAAC,EACA,IAAAC,EACA,MAAAC,EACA,YAAAC,EACA,UAAAC,CAEF,EAAA,CACE,MAAAC,EAAAC,KAGAC,EAAAH,GAAA,EAAA,SAAA,MACAI,EAAAJ,GAAA,EAAAC,EAAA,QAAA,CAAA,EAAAA,EAAA,QAAA,CAAA,EACAI,EAAAL,GAAA,EAAA,aAAA,SACAM,EAAAN,GAAA,EAAAC,EAAA,QAAA,CAAA,EAAA,IACAM,EAAAP,GAAA,EAAA,IAAAC,EAAA,QAAA,CAAA,EACAO,EAAAR,GAAA,EAAA,IAAAC,EAAA,QAAA,CAAA,EACAQ,EAAAT,GAAA,EAAAC,EAAA,QAAA,CAAA,EAAA,IACAS,EAAAV,GAAA,EAAA,MAAA,SACAW,EAAAX,GAAA,EAAA,IAAA,UACAY,EAAAZ,GAAA,EAAA,IAAA,UACAa,EAAAb,GAAA,EAAA,MAAA,SAEAc,EAAAC,GAAAd,CAAA,EAGAe,EAAA,CAAiC,EAAAf,EAAA,QAAA,CAAA,EACb,QAAA,OACT,cAAA,SACM,SAAA,OACL,CAAAA,EAAA,YAAA,GAAA,IAAA,CAAA,EAAA,CACoB,SAAA,OAClB,EACZ,CAAAA,EAAA,YAAA,GAAA,IAAA,CAAA,EAAA,CAC8B,EAAAG,EACzB,cAAAS,EACY,KAAA,UACT,EACR,CAAAZ,EAAA,YAAA,GAAA,IAAA,CAAA,EAAA,CAC8B,SAAA,OAClB,CACZ,EAGFgB,EAAA,CAAsB,QAAA,OACX,eAAA,gBACO,cAAA,SACD,KAAA,OACT,CAAAhB,EAAA,YAAA,GAAA,IAAA,CAAA,EAAA,CACwB,cAAAE,CACb,CACjB,EAGFe,EAAA,CAA0B,KAAAP,CAClB,EAGRQ,EAAA,CAA6B,QAAA,OAClB,WAAA,aACG,aAAAlB,EAAA,QAAA,CAAA,EACiB,cAAA,SACd,CAAAA,EAAA,YAAA,GAAA,IAAA,CAAA,EAAA,CACe,cAAAE,EACb,WAAAE,CACH,CACd,EAGFe,EAAA,CAAsB,WAAA,KACR,EAGdC,EAAA,CAAoB,UAAApB,EAAA,QAAA,CAAA,EACQ,gBAAAa,EAAAvB,CAAA,EAAA,MACK,GAAAU,EAAA,QAAA,CAAA,EACZ,aAAA,MACL,CAAAA,EAAA,YAAA,GAAA,IAAA,CAAA,EAAA,CACgB,WAAAM,EAChB,GAAAD,CACR,CACN,EAGFgB,EAAA,CAAmC,UAAA,MACtB,YAAAd,CACE,EAGfe,EAAA,CAA0B,UAAA,KACb,EAGbC,EAAA,CAA0B,QAAA,OACf,cAAA,QACM,EAGjBC,EAAA,CAAqB,gBAAA,QACF,OAAA,aAAAxB,EAAA,QAAA,QAAA,OAC0B,MAAA,eACpC,WAAA,MACK,6BAAA,CACkB,gBAAA,eACX,MAAA,OACV,CACT,EAGFyB,EAAA,CAAmB,QAAA,OACR,cAAA,SACM,aAAAzB,EAAA,QAAA,CAAA,EACc,CAAAA,EAAA,YAAA,GAAA,IAAA,CAAA,EAAA,CACC,cAAAE,EACb,aAAAM,CACD,CAChB,EAGFkB,EAAA,CAAwB,KAAAf,CAChB,EAIRgB,EAAAtC,GAAAuC,EAAA,IAAAC,EAAA,CAAA,GAAAV,EAAA,QAAA,KAAA,SAAA9B,CAAA,CAAA,EAMAyC,EAAAxC,GAAAsC,EAAAA,IAAAC,EAAA,CAAA,GAAAT,EAAA,QAAA,QAAA,SAAAP,EAAAvB,CAAA,EAAA,KAAA,CAAA,EAMAyC,EAAAxC,GAAAyC,EAAA,KAAAC,EAAA,CAAA,GAAAV,EAAA,SAAA,CAEIK,EAAAA,IAAA,SAAA,CAAA,SAAA,qBAAA,CAAA,EAA2BA,EAAA,IAAA,MAAA,CAAA,wBAAA,CAAA,OAAArC,CAAA,EAAA,CAC4B,CAAA,CAAA,EAI3D2C,EAAA1C,GAAAwC,EAAA,KAAAC,EAAA,CAAA,SAAA,CAEIL,EAAAA,IAAA,SAAA,CAAA,SAAA,WAAA,CAAA,EAAiBpC,CAChB,CAAA,CAAA,EAIL2C,GAAAxC,GAAAqC,EAAA,KAAAC,EAAA,CAAA,SAAA,CAEIL,EAAAA,IAAA,SAAA,CAAA,SAAA,YAAA,CAAA,EAAkBjC,CACjB,CAAA,CAAA,EAILyC,GAAA3C,GAAAC,GAAAsC,EAAAA,KAAAC,EAAA,CAAA,SAAA,CAEIL,EAAAA,IAAA,SAAA,CAAA,SAAA,QAAA,CAAA,EAAcnC,EACb,MAAUC,CAAI,CAAA,CAAA,EAInB,OAAAsC,EAAAA,KAAAK,GAAA,CAAA,GAAAtB,EAAA,UAAA,UAAA,SAAA,CAEIiB,EAAAA,KAAAC,EAAA,CAAA,GAAAjB,EAAA,SAAA,CACEgB,EAAAA,KAAAC,EAAA,CAAA,GAAAhB,EAAA,SAAA,CACEe,EAAAA,KAAAC,EAAA,CAAA,GAAAf,EAAA,SAAA,CACGS,EAAAG,CACA,EAAA,EACHE,EAAAA,KAAAC,EAAA,CAAA,GAAAR,EAAA,SAAA,CAEEG,EAAA,IAAAK,EAAA,CAAA,GAAAZ,EAAA,SAAAU,EAAA,EAA0DC,EAAAA,KAAAC,EAAA,CAAA,GAAAX,EAAA,SAAA,CAEvDY,EAAAC,GACAC,EACA,EAAA,CACH,EAAA,CACF,EAAA,EACFJ,EAAAA,KAAAC,EAAA,CAAA,GAAAP,EAAA,SAAA,CAEEE,EAAA,IAAAU,GAAC,CAAA,MAAAzC,EACC,IAAAC,EACK,SAAAW,CACK,CAAA,EACZV,GAAA,GAAA6B,EAAA,IAAAW,EAAA,CAAA,GAAA,CAAA,GAAAf,EAAA,MAAA,MAAA,EAAA,KAAA5B,EAAA,SAAA,cAAA,CAAA,CAIE,EAAA,CAEJ,EAAA,EACFG,IAAA,GAAA6B,EAAA,IAAAW,EAAA,CAAA,GAAA,CAAA,GAAAf,EAAA,UAAA,YAAA,EAAA,KAAA5B,EAAA,SAAA,cAAA,CAAA,CAIE,CAAA,CAAA,CAIR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}